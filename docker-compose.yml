version: '3.7'

services:

  netboot_service:
    build: docker/service
    environment:
      KC_HOSTNAME: identity.netboot.fr
      KC_PROXY: edge
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://netboot_db/keycloak
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/ssl/server.crt.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/ssl/server.key.pem
    networks:
      default: {}
      webgateway: {}
    volumes:
       - /docker/data/netboot/identity/ssl/:/opt/keycloak/ssl/
       - /docker/data/netboot/identity/providers:/opt/keycloak/providers/
    depends_on:
      netboot_db:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=webgateway
      - traefik.http.routers.netboot_identity.entryPoints=websecure
      - traefik.http.routers.netboot_identity.tls=true
      - traefik.http.routers.netboot_identity.service=netboot_identity
      - traefik.http.routers.netboot_identity.rule=Host("identity.netboot.fr")
      - traefik.http.routers.netboot_identity.tls.certresolver=letsencrypt
      - traefik.http.services.netboot_identity.loadbalancer.server.port=8443
      - traefik.http.services.netboot_identity.loadbalancer.server.scheme=https
    command: ["start --auto-build"]
    healthcheck:
      test: ["CMD", "curl", "-kILs", "--fail", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    
  netboot_db:
    build: docker/db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
       - /docker/data/netboot/identity/db:/var/lib/postgresql/data
    networks:
      default: {}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

networks:
  webgateway:
    external: true
